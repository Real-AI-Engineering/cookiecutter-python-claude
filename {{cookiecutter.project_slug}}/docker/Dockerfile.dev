{% if cookiecutter.use_docker == "y" and cookiecutter.project_type != "cli" -%}
# Development Docker build for {{cookiecutter.project_name}}
# FastAPI application with hot-reload

FROM python:{{cookiecutter.python_version}}-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy project files
COPY pyproject.toml .
COPY README.md .

# Install development dependencies
RUN pip install --upgrade pip
RUN pip install -e ".[dev]"

# Create non-root user (but we'll use root in dev for convenience)
RUN groupadd -r appuser && useradd -r -g appuser appuser

# The source code will be mounted as a volume
VOLUME ["/app/src"]

# Expose port
EXPOSE 8000

# Run with hot reload
CMD ["uvicorn", "{{cookiecutter.project_slug}}.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--reload-dir", "/app/src"]
{% elif cookiecutter.use_docker == "y" -%}
# Development Docker build for {{cookiecutter.project_name}}
# CLI application

FROM python:{{cookiecutter.python_version}}-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy project files
COPY pyproject.toml .
COPY README.md .

# Install development dependencies
RUN pip install --upgrade pip
RUN pip install -e ".[dev]"

# The source code will be mounted as a volume
VOLUME ["/app/src"]

# Default command
CMD ["python", "-m", "{{cookiecutter.project_slug}}"]
{% endif -%}